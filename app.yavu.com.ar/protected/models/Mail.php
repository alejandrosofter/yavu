<?php

/**
 * This is the model class for table "emails".
 *
 * The followings are the available columns in table 'emails':
 * @property integer $id
 * @property string $emisor
 * @property string $receptor
 * @property string $mensaje
 * @property string $fecha
 * @property string $estado
 */
class Mail extends CActiveRecord
{
	/**
	 * Returns the static model of the specified AR class.
	 * @param string $className active record class name.
	 * @return Mail the static model class
	 */
	public $buscar;
	public static function model($className=__CLASS__)
	{
		return parent::model($className);
	}

	/**
	 * @return string the associated database table name
	 */
	public function tableName()
	{
		return 'emails';
	}

	/**
	 * @return array validation rules for model attributes.
	 */
	public function rules()
	{
		// NOTE: you should only define rules for those attributes that
		// will receive user inputs.
		return array(
			array('emisor, receptor, estado', 'length', 'max'=>255),
			array('mensaje, fecha', 'safe'),
			// The following rule is used by search().
			// Please remove those attributes that should not be searched.
			array('id, emisor, receptor, mensaje, fecha, estado', 'safe', 'on'=>'search'),
			);
	}

	/**
	 * @return array relational rules.
	 */
	public function relations()
	{
		// NOTE: you may need to adjust the relation name and the related
		// class name for the relations automatically generated below.
		return array(
			);
	}

	/**
	 * @return array customized attribute labels (name=>label)
	 */
	public function attributeLabels()
	{
		return array(
			'id' => 'ID',
			'emisor' => 'Emisor',
			'receptor' => 'Receptor',
			'mensaje' => 'Mensaje',
			'fecha' => 'Fecha',
			'estado' => 'Estado',
			);
	}

	public function enviarMensajeBase($destinatario,$cuerpoMensaje,$titulo,$remitente=null)
	{
		$parametros['cuerpo']=$cuerpoMensaje;
		if($remitente==null)$remitente= Settings::model()->getValorSistema('DATOS_EMPRESA_EMAILADMIN');
		$parametros['empresa']=Settings::model()->getValorSistema('DATOS_EMPRESA_FANTASIA');
		$parametros['direccion']=Settings::model()->getValorSistema('DATOS_EMPRESA_DIRECCION');
		$parametros['telefono']=Settings::model()->getValorSistema('DATOS_EMPRESA_TELEFONO');
		$parametros['horariosAtencion']= Settings::model()->getValorSistema('DATOS_EMPRESA_HORARIOS');
		$parametros['emailAdmin']= Settings::model()->getValorSistema('DATOS_EMPRESA_EMAILADMIN');
		$parametros['site']= Settings::model()->getValorSistema('DATOS_EMPRESA_SITE');
		$parametros['titulo']= $titulo;
		$parametros['fecha']= Date('d-m-Y H:i');
		self::model()->enviarMail ( $destinatario, Settings::model()->getValorSistema('PLANTILLA_BASE',$parametros,'impresiones'), $titulo, $remitente);
	}
	private function _enviar($to,$from,$mensaje,$subject,$pdfdoc)
	{


		$separator = md5(time());

		// carriage return type (we use a PHP end of line constant)
		$eol = PHP_EOL;

		// attachment name
		$filename = "COMPROBANTE.pdf";

		//$pdfdoc is PDF generated by FPDF
		$attachment = chunk_split(base64_encode($pdfdoc));

		// main header
		$headers  = "From: ".$from.$eol;
		$headers .= "MIME-Version: 1.0".$eol; 
		$headers .= 'To: CLIENTE <'.$to.'>,  <'.$to.'>' . "\r\n";
		$headers .= 'From: YAVU <info@yavu.com.ar>' . "\r\n";
		$headers .= "Content-Type: multipart/mixed; boundary=\"".$separator."\"";

		// no more headers after this, we start the body! //

		// message
		$body = "--".$separator.$eol;
		$body .= "Content-Type: text/html; charset=\"iso-8859-1\"".$eol;
		$body .= "Content-Transfer-Encoding: 8bit".$eol.$eol;
		
		$body .= $mensaje.$eol;

		// attachment
		$body .= "--".$separator.$eol;
		$body .= "Content-Type: application/octet-stream; name=\"".$filename."\"".$eol; 
		$body .= "Content-Transfer-Encoding: base64".$eol;
		$body .= "Content-Disposition: attachment".$eol.$eol;
		$body .= $attachment.$eol;
		$body .= "--".$separator."--";

		// send message
		if (mail($to, $subject, $body, $headers)) {
		    return true;
		} else {
		    return false;
		}
	}
	public function enviarMail($mail,$mensaje,$titulo,$desde,$attachs=null)
	{
		$error='';
		$enviado=$this->_enviar($mail,$desde,$mensaje,$titulo,$attachs);
		$estado=$enviado?"ENVIADO":"ERROR";
		self::ingresa($estado,$mail,$mensaje,$titulo,$desde,Date('Y-m-d H:i:s'));
		
		$sal['error']=$enviado;
		$sal['mensaje']=$error;

			return $sal;
		}
		private function ingresa($estado,$mail,$mensaje,$titulo,$desde,$fecha)
		{
			$model=new Mail;
			$model->emisor=$desde;
			$model->receptor=$mail;
			$model->estado=$estado;
			$model->fecha=$fecha;
			$model->mensaje=$mensaje;
			$model->save();
		}
		public function search()
		{
		// Warning: Please modify the following code to remove attributes that
		// should not be searched.

			$criteria=new CDbCriteria;

			$criteria->compare('receptor',$this->buscar,'OR',true);
			$criteria->order='id desc';
			return new CActiveDataProvider($this, array(
				'criteria'=>$criteria,
				));
		}
	}